// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SyntaxHighlighter allows lineProps as an object 1`] = `
<pre
  style={
    Object {
      "background": "#F0F0F0",
      "color": "#444",
      "display": "block",
      "overflowX": "auto",
      "padding": "0.5em",
    }
  }
>
  <code>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      <span
        style={Object {}}
      >
        const woah = fun =&gt; fun + 1;

      </span>
    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      const dude = woah(2) + 3;

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      function thisIsAFunction() {

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
        return [1,2,3].map(n =&gt; n + 1).filter(n !== 3);

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      }

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      console.log('making up fake code is really hard');

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      function itIs() {

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
        return 'no seriously really it is';

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      }

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      

    </span>
  </code>
</pre>
`;

exports[`SyntaxHighlighter allows lineProps as function 1`] = `
<pre
  style={
    Object {
      "background": "#F0F0F0",
      "color": "#444",
      "display": "block",
      "overflowX": "auto",
      "padding": "0.5em",
    }
  }
>
  <code>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      <span
        style={Object {}}
      >
        const woah = fun =&gt; fun + 1;

      </span>
    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      const dude = woah(2) + 3;

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      function thisIsAFunction() {

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
        return [1,2,3].map(n =&gt; n + 1).filter(n !== 3);

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      }

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      console.log('making up fake code is really hard');

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      function itIs() {

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
        return 'no seriously really it is';

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      }

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      

    </span>
  </code>
</pre>
`;

exports[`SyntaxHighlighter component renders correctly 1`] = `
<pre
  style={
    Object {
      "background": "#F0F0F0",
      "color": "#444",
      "display": "block",
      "overflowX": "auto",
      "padding": "0.5em",
    }
  }
>
  <code>
    <span
      style={Object {}}
    >
      <span
        style={Object {}}
      >
        const woah = fun =&gt; fun + 1;

      </span>
    </span>
    <span
      style={Object {}}
    >
      const dude = woah(2) + 3;

    </span>
    <span
      style={Object {}}
    >
      function thisIsAFunction() {

    </span>
    <span
      style={Object {}}
    >
        return [1,2,3].map(n =&gt; n + 1).filter(n !== 3);

    </span>
    <span
      style={Object {}}
    >
      }

    </span>
    <span
      style={Object {}}
    >
      console.log('making up fake code is really hard');

    </span>
    <span
      style={Object {}}
    >
      

    </span>
    <span
      style={Object {}}
    >
      function itIs() {

    </span>
    <span
      style={Object {}}
    >
        return 'no seriously really it is';

    </span>
    <span
      style={Object {}}
    >
      }

    </span>
    <span
      style={Object {}}
    >
      

    </span>
  </code>
</pre>
`;

exports[`SyntaxHighlighter renders java code correctly with wrapLines 1`] = `
<pre
  style={
    Object {
      "background": "#F0F0F0",
      "color": "#444",
      "display": "block",
      "overflowX": "auto",
      "padding": "0.5em",
    }
  }
>
  <code>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      <span
        style={Object {}}
      >
        package com.javatest;

      </span>
    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      public class BubbleSort {

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
        /**

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
         * Applies bubble sort to an array and returns whether the array was sorted correctly.

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
         */

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
        public boolean checkSort(int[] a) {

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
          sort(a);

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
          for (int i = 0; i &lt; a.length - 1; i++) {

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
            if (a[i] &gt; a[i + 1]) {

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
              return false;

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
            }

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
          }

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
          return true;

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
        }

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
        /**

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
         * Bubble sort an array, mutating the array (contains a bug).

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
         */

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
        public void sort(int [] a) {

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
          int j;

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
          boolean flag = true;

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
          int temp;

    </span>
  </code>
</pre>
`;
